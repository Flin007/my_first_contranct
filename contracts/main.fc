{- msg_value - этот параметр сообщает нам, сколько монет TON (или граммов) получено с
этим сообщением -}
{- is_msg - это полное сообщение, которое мы получили, со всей информацией о том, кто его
отправил и т. д. Мы видим, что оно имеет тип Cell. Что это значит? Тело сообщения хранится
в виде ячейки в TVM, поэтому нашему сообщению со всеми ее данными посвящена одна
целая ячейка -}
{- in_msg_body - это собственно «читаемая» часть сообщения, которое мы получили. Он имеет
тип среза, поскольку является частью Ячейки, он указывает «адрес», с какой части ячейки
нам следует начать чтение, если мы хотим прочитать этот параметр среза.` -}
{- impure - 1/3 возможных спецификаторов, inline, inlineref -}

#include "imports/stdlib.fc";

() recv_internal(int msg_value, cell is_msg, slice in_msg_body) impure {
    ;;;Открываем ячейку для чтения
    slice cs = is_msg.begin_parse();
    ;;;Открываем первые 4 бита с флагами
    ;;;int mst_something = cs~load_unit(4); прочет следющие 4 бита, не надо каждый раз с 0, если ничего нет получим exit 9 код
    int flags = cs~load_uint(4);
    ;;;Считываем адрес отправителя, который стоит сразу после флажков
    slice sender_address = cs~load_msg_addr();

    ;;;set_data - Сохраняет пустую ячейку
    ;;; создаем ячейку при помощи begin_cell().end_cell()
    ;;; сделаем срез хранилищас куда передадим адрес отправителя
    set_data(begin_cell().store_slice(sender_address).end_cell());
}

;;;функция получения последнего адреса отправителя из сохраненной ячейки
slice get_the_latest_sender() method_id {
    slice ds = get_data().begin_parse();
    return ds~load_msg_addr();
}